// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package server;

public final class ChatServerImpl_Stub extends java.rmi.server.RemoteStub
		implements server.ChatServer {
	private static final long serialVersionUID = 2;

	private static java.lang.reflect.Method $method_addUserToGroup_0;
	private static java.lang.reflect.Method $method_deleteOffLineMessages_1;
	private static java.lang.reflect.Method $method_getAllUsers_2;
	private static java.lang.reflect.Method $method_getOffLineMessages_3;
	private static java.lang.reflect.Method $method_getUserData_4;
	private static java.lang.reflect.Method $method_sendFileAcceptanceToUser_5;
	private static java.lang.reflect.Method $method_sendMessage_6;
	private static java.lang.reflect.Method $method_sendUserStatusMessage_7;
	private static java.lang.reflect.Method $method_signInUser_8;
	private static java.lang.reflect.Method $method_signOutUser_9;
	private static java.lang.reflect.Method $method_signUpUser_10;

	static {
		try {
			$method_addUserToGroup_0 = server.ChatServer.class.getMethod(
					"addUserToGroup", new java.lang.Class[] {
							java.lang.String.class, java.lang.String.class,
							java.lang.String.class, boolean.class });
			$method_deleteOffLineMessages_1 = server.ChatServer.class
					.getMethod("deleteOffLineMessages",
							new java.lang.Class[] { java.lang.String.class });
			$method_getAllUsers_2 = server.ChatServer.class.getMethod(
					"getAllUsers", new java.lang.Class[] {});
			$method_getOffLineMessages_3 = server.ChatServer.class.getMethod(
					"getOffLineMessages",
					new java.lang.Class[] { java.lang.String.class });
			$method_getUserData_4 = server.ChatServer.class.getMethod(
					"getUserData",
					new java.lang.Class[] { java.lang.String.class });
			$method_sendFileAcceptanceToUser_5 = server.ChatServer.class
					.getMethod("sendFileAcceptanceToUser",
							new java.lang.Class[] { java.lang.String.class,
									java.lang.String.class,
									java.lang.String.class });
			$method_sendMessage_6 = server.ChatServer.class.getMethod(
					"sendMessage",
					new java.lang.Class[] { beans.Message.class });
			$method_sendUserStatusMessage_7 = server.ChatServer.class
					.getMethod("sendUserStatusMessage", new java.lang.Class[] {
							java.lang.String.class, java.lang.String.class,
							boolean.class });
			$method_signInUser_8 = server.ChatServer.class.getMethod(
					"signInUser", new java.lang.Class[] {
							java.lang.String.class, java.lang.String.class,
							client.MessageReceiver.class });
			$method_signOutUser_9 = server.ChatServer.class.getMethod(
					"signOutUser",
					new java.lang.Class[] { java.lang.String.class });
			$method_signUpUser_10 = server.ChatServer.class.getMethod(
					"signUpUser", new java.lang.Class[] { beans.UserData.class,
							boolean.class });
		} catch (java.lang.NoSuchMethodException e) {
			throw new java.lang.NoSuchMethodError(
					"stub class initialization failed");
		}
	}

	// constructors
	public ChatServerImpl_Stub(java.rmi.server.RemoteRef ref) {
		super(ref);
	}

	// methods from remote interfaces

	// implementation of addUserToGroup(String, String, String, boolean)
	public int addUserToGroup(java.lang.String $param_String_1,
			java.lang.String $param_String_2, java.lang.String $param_String_3,
			boolean $param_boolean_4) throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_addUserToGroup_0,
					new java.lang.Object[] { $param_String_1, $param_String_2,
							$param_String_3,
							new java.lang.Boolean($param_boolean_4) },
					5258539547306211090L);
			return ((java.lang.Integer) $result).intValue();
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of deleteOffLineMessages(String)
	public int deleteOffLineMessages(java.lang.String $param_String_1)
			throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_deleteOffLineMessages_1,
					new java.lang.Object[] { $param_String_1 },
					5094529217329810592L);
			return ((java.lang.Integer) $result).intValue();
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of getAllUsers()
	public java.util.HashMap getAllUsers() throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_getAllUsers_2, null,
					8860508650079807464L);
			return ((java.util.HashMap) $result);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of getOffLineMessages(String)
	public java.util.Vector getOffLineMessages(java.lang.String $param_String_1)
			throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_getOffLineMessages_3,
					new java.lang.Object[] { $param_String_1 },
					530863603565018930L);
			return ((java.util.Vector) $result);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of getUserData(String)
	public beans.UserData getUserData(java.lang.String $param_String_1)
			throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_getUserData_4,
					new java.lang.Object[] { $param_String_1 },
					-1284862781028593405L);
			return ((beans.UserData) $result);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of sendFileAcceptanceToUser(String, String, String)
	public int sendFileAcceptanceToUser(java.lang.String $param_String_1,
			java.lang.String $param_String_2, java.lang.String $param_String_3)
			throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this,
					$method_sendFileAcceptanceToUser_5,
					new java.lang.Object[] { $param_String_1, $param_String_2,
							$param_String_3 }, -8439713640989168446L);
			return ((java.lang.Integer) $result).intValue();
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of sendMessage(Message)
	public void sendMessage(beans.Message $param_Message_1)
			throws java.rmi.RemoteException {
		try {
			ref.invoke(this, $method_sendMessage_6,
					new java.lang.Object[] { $param_Message_1 },
					4102742485547595587L);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of sendUserStatusMessage(String, String, boolean)
	public int sendUserStatusMessage(java.lang.String $param_String_1,
			java.lang.String $param_String_2, boolean $param_boolean_3)
			throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_sendUserStatusMessage_7,
					new java.lang.Object[] { $param_String_1, $param_String_2,
							new java.lang.Boolean($param_boolean_3) },
					5546071552963828050L);
			return ((java.lang.Integer) $result).intValue();
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of signInUser(String, String, MessageReceiver)
	public beans.UserData signInUser(java.lang.String $param_String_1,
			java.lang.String $param_String_2,
			client.MessageReceiver $param_MessageReceiver_3)
			throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_signInUser_8,
					new java.lang.Object[] { $param_String_1, $param_String_2,
							$param_MessageReceiver_3 }, 8650034466017786796L);
			return ((beans.UserData) $result);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of signOutUser(String)
	public void signOutUser(java.lang.String $param_String_1)
			throws java.rmi.RemoteException {
		try {
			ref.invoke(this, $method_signOutUser_9,
					new java.lang.Object[] { $param_String_1 },
					-1364332091286291327L);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}

	// implementation of signUpUser(UserData, boolean)
	public int signUpUser(beans.UserData $param_UserData_1,
			boolean $param_boolean_2) throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_signUpUser_10,
					new java.lang.Object[] { $param_UserData_1,
							new java.lang.Boolean($param_boolean_2) },
					-3765791518372430536L);
			return ((java.lang.Integer) $result).intValue();
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException(
					"undeclared checked exception", e);
		}
	}
}
